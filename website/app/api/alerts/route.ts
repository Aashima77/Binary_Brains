import { verify } from "jsonwebtoken";
import { NextRequest, NextResponse } from "next/server";

import { db } from "@/database/db";

interface DecodedToken {
  userId: string;
}

/**
 * @swagger
 * /api/alerts:
 *   get:
 *     summary: Retrieve all safety violation alerts for the authenticated user's factories.
 *     description: |
 *       This endpoint fetches all alerts generated by cameras installed in the authenticated user's factories.
 *       Alerts include timestamp, type of violation, camera, location, and associated image.
 *     tags:
 *       - Alerts
 *     security:
 *       - cookieAuth: []
 *     responses:
 *       200:
 *         description: A list of violation alerts.
 *         content:
 *           application/json:
 *             schema:
 *               type: array
 *               items:
 *                 type: object
 *                 properties:
 *                   id:
 *                     type: string
 *                     description: Unique alert ID.
 *                   timestamp:
 *                     type: string
 *                     format: date-time
 *                     description: Timestamp of when the violation occurred.
 *                   type:
 *                     type: string
 *                     description: Type of violation (e.g., "No Helmet", "Intrusion").
 *                   image:
 *                     type: string
 *                     format: uri
 *                     description: URL of the image captured during the violation.
 *                   camera_name:
 *                     type: string
 *                     description: Name of the camera that detected the violation.
 *                   location_name:
 *                     type: string
 *                     description: Location where the camera is installed.
 *                   factory_name:
 *                     type: string
 *                     description: Name of the factory where the violation occurred.
 *       401:
 *         description: Unauthorized. Missing or invalid access token.
 *       500:
 *         description: Internal server error while fetching alerts.
 */
export async function GET(req: NextRequest) {
  const accessToken = req.cookies.get("accessToken")?.value;

  if (!accessToken) {
    return NextResponse.json({ message: "Unauthorized" }, { status: 401 });
  }

  try {
    const decoded = verify(
      accessToken,
      process.env.JWT_ACCESS_SECRET!,
    ) as DecodedToken;

    const { rows } = await db.query(
      `
      SELECT
        v.id,
        v.timestamp,
        v.violation_type AS type,
        v.image_url AS image,
        c.name AS camera_name,
        l.name AS location_name,
        f.name AS factory_name
      FROM violations v
      JOIN cameras c ON v.camera_id = c.id
      JOIN locations l ON c.location_id = l.id
      JOIN factories f ON l.factory_id = f.id
      WHERE f.user_id = $1
      ORDER BY v.timestamp DESC
      `,
      [decoded.userId],
    );

    return NextResponse.json(rows);
  } catch (error) {
    console.error("Error fetching alerts:", error);
    return NextResponse.json(
      { message: "Error fetching alerts" },
      { status: 500 },
    );
  }
}
